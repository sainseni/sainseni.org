name: Release
env:
    DATABASE_URL: ${{ secrets.DATABASE_URL }}
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    GITHUB_CLIENT_ID: ${{ secrets.OAUTH_GITHUB_CLIENT_ID }}
    GITHUB_CLIENT_SECRET: ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }}
    GOOGLE_CLIENT_ID: ${{ secrets.OAUTH_GOOGLE_CLIENT_ID }}
    GOOGLE_CLIENT_SECRET: ${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }}
on:
    push:
        tags:
            - '*'
jobs:
    build:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - uses: pnpm/action-setup@v4
              with:
                  version: 8.15.5
                  run_install: true
            - name: Lint
              run: pnpm lint
            - name: Build
              run: pnpm build
            - name: Test
              run: pnpm test

    deploy:
        environment:
            name: 'Production'
            url: 'https://sainseni.org'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - uses: pnpm/action-setup@v4
              with:
                  version: 7.33.1
                  run_install: false
            - name: Install Vercel CLI with pnpm
              run: pnpm add -g vercel@latest

            - name: Set env Vercel
              run: |
                  vercel env add DATABASE_URL ${{ secrets.DATABASE_URL }} production --token=${{ secrets.VERCEL_TOKEN }} 
                  vercel env add GITHUB_CLIENT_ID ${{ secrets.OAUTH_GITHUB_CLIENT_ID }} production --token=${{ secrets.VERCEL_TOKEN }}
                  vercel env add GITHUB_CLIENT_SECRET ${{ secrets.OAUTH_GITHUB_CLIENT_SECRET }} production --token=${{ secrets.VERCEL_TOKEN }}
                  vercel env add GOOGLE_CLIENT_ID ${{ secrets.OAUTH_GOOGLE_CLIENT_ID }} production --token=${{ secrets.VERCEL_TOKEN }}
                  vercel env add GOOGLE_CLIENT_SECRET ${{ secrets.OAUTH_GOOGLE_CLIENT_SECRET }} production --token=${{ secrets.VERCEL_TOKEN }}

            - name: Pull Vercel Environment Information
              run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

            - name: Build Project Artifacts
              run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}

            - name: Deploy Project Artifacts to Vercel
              run: vercel deploy --prod --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
